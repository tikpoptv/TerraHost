version: '3.8'

services:
  # Backend Service (Express.js)
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: terrahost-backend
    ports:
      - "${BACKEND_EXTERNAL_PORT:-3501}:${BACKEND_PORT:-8000}"
    environment:
      # Server Configuration
      - NODE_ENV=${NODE_ENV:-production}
      - PORT=${BACKEND_PORT:-8000}
      
      # Database Configuration
      - DB_HOST=${DB_HOST:-localhost}
      - DB_PORT=${DB_PORT:-5432}
      - DB_NAME=${DB_NAME:-terrahost}
      - DB_USER=${DB_USER:-postgres}
      - DB_PASSWORD=${DB_PASSWORD:-password}
      
      # JWT Configuration
      - JWT_SECRET=${JWT_SECRET:-your-super-secret-jwt-key-change-this-in-production}
      - JWT_EXPIRES_IN=${JWT_EXPIRES_IN:-7d}
    networks:
      - terrahost-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Frontend Service (Next.js)
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: terrahost-frontend
    ports:
      - "${FRONTEND_EXTERNAL_PORT:-3500}:${FRONTEND_PORT:-3000}"
    environment:
      - NODE_ENV=${NODE_ENV:-production}
      - NEXT_PUBLIC_API_URL=${NEXT_PUBLIC_API_URL:-http://localhost:8000}
    depends_on:
      backend:
        condition: service_healthy
    networks:
      - terrahost-network
    restart: unless-stopped

networks:
  terrahost-network:
    driver: bridge